{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAIzBC,EAAW,GAEjB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAMPP,EAAKC,KAAKc,iBAAiB,UAS3B,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAwBd,EAAxBG,MAAOY,EAAiBf,EAAjBe,OAAQC,EAAShB,EAATgB,KACrB,GAAID,EAAS,GAAKC,GAAQ,GAAKF,EAAQ,EACrC,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAAG,CACnC,IACMC,EAAUjB,EADDgB,EACyBH,GACxCA,GAASE,EACTE,EACGC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA3B,GAAS4B,OAAOC,QACd,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG7CsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,SAIvEkB,EAAA3B,GAAS4B,OAAOI,QA/CE,uB,IAoBtB9B,EAAKC,KAAKc,iBAAiB,SAE3B,SAAuBC,GAGrB,OAFAZ,EAASY,EAAMe,OAAOC,OAAShB,EAAMe,OAAOE,MAErC7B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nconst ERROR_MESSAGE = 'Enter values > 0 !!!';\nconst formData = {};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.form.addEventListener('input', onInputChange);\n\nfunction onInputChange(event) {\n  formData[event.target.name] = +event.target.value;\n\n  return formData;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let { delay, amount, step } = formData;\n  if (amount > 0 && step >= 0 && delay > 0) {\n    for (let i = 1; i <= amount; i += 1) {\n      let position = i;\n      const promise = createPromise(position, delay);\n      delay += step;\n      promise\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  } else {\n    Notiflix.Notify.failure(ERROR_MESSAGE);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","amount","step","i","promise","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","target","name","value"],"version":3,"file":"03-promises.8efa9eea.js.map"}